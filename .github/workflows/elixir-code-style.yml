name: Elixir code style

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      id: beam
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.18.4'
        otp-version: '26.1'

    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix do deps.get, deps.compile

    - name: Restore PLT cache
      id: plt_cache
      uses: actions/cache/restore@v3
      with:
        key: |
          plt-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          plt-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
        path: |
          priv/plts

    - name: Create PLTs
      if: steps.plt_cache.outputs.cache-hit != 'true'
      run: mix dialyzer --plt

    - name: Save PLT cache
      id: plt_cache_save
      uses: actions/cache/save@v3
      if: steps.plt_cache.outputs.cache-hit != 'true'
      with:
        key: |
          plt-${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('**/mix.lock') }}
        path: |
          priv/plts

    - name: Run dialyzer
      run: mix dialyzer --format github --format dialyxir

    - name: Check formatting
      run: mix format --check-formatted

    - name: Run Credo
      run: mix credo --strict
